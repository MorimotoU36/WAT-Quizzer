AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for sam-prisma

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  DbUrl:
    Type: String
  PrismaTarget:
    Type: String

Resources:
  ApiGatewayRestApi:
      Type: AWS::Serverless::Api
      Properties:
        StageName: Prod
        Auth:
          ApiKeyRequired: true # sets for all methods
  SamQuizzerApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: sam-quizzer-api/
      Handler: app.lambdaHandler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DATABASE_URL: !Ref DbUrl
          PRISMA_CLI_BINARY_TARGETS: !Ref PrismaTarget
      Events:
        QuizzerApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGatewayRestApi
            Auth:
              ApiKeyRequired: true
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts
        Loader:
          - .prisma=file
          - .so.node=file
        AssetNames: '[name]'
  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties: 
      Enabled: true
      Name: !Sub 'api-key'
      StageKeys: 
        - RestApiId: !Ref ApiGatewayRestApi
          StageName: Prod
  ApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn:
      - ApiKey
    Properties:
      ApiStages:
          - ApiId: !Ref ApiGatewayRestApi
            Stage: Prod
      Throttle:
        BurstLimit: 200
        RateLimit: 100
      UsagePlanName: !Sub 'api-plan'
  ApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    DependsOn:
      - ApiUsagePlan
      - SamQuizzerApiFunction
    Properties : 
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan

Outputs:
  # SamQuizzerApi:
  #   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  SamQuizzerApiFunction:
    Description: "SAM Quizzer Api Lambda Function ARN"
    Value: !GetAtt SamQuizzerApiFunction.Arn
  SamQuizzerApiFunctionIamRole:
    Description: "Implicit IAM Role created for SAM Quizzer Api function"
    Value: !GetAtt SamQuizzerApiFunctionRole.Arn
