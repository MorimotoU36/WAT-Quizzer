import Head from 'next/head';
import { Inter } from 'next/font/google';
import { Button, Card, CardContent, CardHeader, Container, MenuItem, TextField, Typography } from '@mui/material';
import { topButtonStyle } from '../styles/Pages';
import { useEffect, useState } from 'react';
import { get, post } from '@/common/API';
import { messageBoxStyle } from '../styles/Pages';

const inter = Inter({ subsets: ['latin'] });

const cardStyle = {
  margin: '10px 0'
};

const cardContentStyle = {
  display: 'flex',
  width: '100%'
};

const inputTextBeforeButtonStyle = {
  flex: 'auto'
};

const buttonAfterInputTextStyle = {
  flex: 'none',
  margin: '10px'
};

export default function Settings() {
  const [booklistoption, setBooklistoption] = useState<JSX.Element[]>();
  const [bookName, setBookName] = useState<string>();
  const [message, setMessage] = useState({
    message: '　',
    messageColor: 'common.black'
  });

  useEffect(() => {
    getBook();
  }, []);

  const getBook = () => {
    setMessage({ message: '通信中...', messageColor: '#d3d3d3' });
    get('/saying/book', (data: any) => {
      if (data.status === 200) {
        data = data.body;
        let booklist = [];
        for (var i = 0; i < data.length; i++) {
          booklist.push(
            <MenuItem value={data[i].id} key={data[i].id}>
              {data[i].name}
            </MenuItem>
          );
        }
        setBooklistoption(booklist);
        setMessage({ message: '　', messageColor: 'common.black' });
      } else {
        setMessage({ message: 'エラー:外部APIとの連携に失敗しました', messageColor: 'error' });
      }
    });
  };

  const addBook = () => {
    if (!bookName || bookName === '') {
      setMessage({ message: 'エラー:本名を入力して下さい', messageColor: 'error' });
      return;
    }

    setMessage({ message: '通信中...', messageColor: '#d3d3d3' });
    post(
      '/saying/book',
      {
        book_name: bookName
      },
      (data: any) => {
        if (data.status === 200 || data.status === 201) {
          data = data.body;
          setMessage({ message: `新規ファイル「${bookName}」を追加しました`, messageColor: 'success.light' });
        } else {
          setMessage({ message: 'エラー:外部APIとの連携に失敗しました', messageColor: 'error' });
        }
      }
    );
    getBook();
  };

  return (
    <>
      <Head>
        <title>設定</title>
        {/* <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <Container>
        <h1>WAT Quizzer - 設定</h1>

        <Card variant="outlined" style={messageBoxStyle}>
          <CardContent>
            <Typography variant="h6" component="h6" color={message.messageColor}>
              {message.message}
            </Typography>
          </CardContent>
        </Card>

        <Card variant="outlined" style={cardStyle}>
          <CardHeader title="格言設定" />
          <CardContent>
            <Card variant="outlined">
              <CardHeader subheader="新規追加 - 啓発本" />
              <CardContent style={cardContentStyle}>
                <TextField
                  label="新規啓発本名"
                  variant="outlined"
                  onChange={(e) => {
                    setBookName(e.target.value);
                  }}
                  style={inputTextBeforeButtonStyle}
                />
                <Button variant="contained" style={buttonAfterInputTextStyle} onClick={(e) => addBook()}>
                  追加
                </Button>
              </CardContent>
            </Card>
          </CardContent>
        </Card>
      </Container>
    </>
  );
}
